/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: api/core/address.proto */

#ifndef PROTOBUF_C_api_2fcore_2faddress_2eproto__INCLUDED
#define PROTOBUF_C_api_2fcore_2faddress_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Core__SocketAddress Core__SocketAddress;
typedef struct Core__CidrRange Core__CidrRange;


/* --- enums --- */

typedef enum _Core__SocketAddress__Protocol {
  CORE__SOCKET_ADDRESS__PROTOCOL__TCP = 0,
  CORE__SOCKET_ADDRESS__PROTOCOL__UDP = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CORE__SOCKET_ADDRESS__PROTOCOL)
} Core__SocketAddress__Protocol;

/* --- messages --- */

struct  Core__SocketAddress
{
  ProtobufCMessage base;
  Core__SocketAddress__Protocol protocol;
  uint32_t port;
  uint32_t ipv4;
};
#define CORE__SOCKET_ADDRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core__socket_address__descriptor) \
    , CORE__SOCKET_ADDRESS__PROTOCOL__TCP, 0, 0 }


struct  Core__CidrRange
{
  ProtobufCMessage base;
  char *address_prefix;
  uint32_t prefix_len;
};
#define CORE__CIDR_RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&core__cidr_range__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


/* Core__SocketAddress methods */
void   core__socket_address__init
                     (Core__SocketAddress         *message);
size_t core__socket_address__get_packed_size
                     (const Core__SocketAddress   *message);
size_t core__socket_address__pack
                     (const Core__SocketAddress   *message,
                      uint8_t             *out);
size_t core__socket_address__pack_to_buffer
                     (const Core__SocketAddress   *message,
                      ProtobufCBuffer     *buffer);
Core__SocketAddress *
       core__socket_address__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core__socket_address__free_unpacked
                     (Core__SocketAddress *message,
                      ProtobufCAllocator *allocator);
/* Core__CidrRange methods */
void   core__cidr_range__init
                     (Core__CidrRange         *message);
size_t core__cidr_range__get_packed_size
                     (const Core__CidrRange   *message);
size_t core__cidr_range__pack
                     (const Core__CidrRange   *message,
                      uint8_t             *out);
size_t core__cidr_range__pack_to_buffer
                     (const Core__CidrRange   *message,
                      ProtobufCBuffer     *buffer);
Core__CidrRange *
       core__cidr_range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   core__cidr_range__free_unpacked
                     (Core__CidrRange *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Core__SocketAddress_Closure)
                 (const Core__SocketAddress *message,
                  void *closure_data);
typedef void (*Core__CidrRange_Closure)
                 (const Core__CidrRange *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor core__socket_address__descriptor;
extern const ProtobufCEnumDescriptor    core__socket_address__protocol__descriptor;
extern const ProtobufCMessageDescriptor core__cidr_range__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_api_2fcore_2faddress_2eproto__INCLUDED */
