/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: api/endpoint/endpoint.proto */

#ifndef PROTOBUF_C_api_2fendpoint_2fendpoint_2eproto__INCLUDED
#define PROTOBUF_C_api_2fendpoint_2fendpoint_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "core/address.pb-c.h"

typedef struct Endpoint__Endpoint Endpoint__Endpoint;
typedef struct Endpoint__LocalityLbEndpoints Endpoint__LocalityLbEndpoints;
typedef struct Endpoint__ClusterLoadAssignment Endpoint__ClusterLoadAssignment;


/* --- enums --- */


/* --- messages --- */

struct  Endpoint__Endpoint
{
  ProtobufCMessage base;
  Core__SocketAddress *address;
};
#define ENDPOINT__ENDPOINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&endpoint__endpoint__descriptor) \
    , NULL }


struct  Endpoint__LocalityLbEndpoints
{
  ProtobufCMessage base;
  size_t n_lb_endpoints;
  Endpoint__Endpoint **lb_endpoints;
  uint32_t load_balancing_weight;
  uint32_t priority;
  uint32_t connect_num;
};
#define ENDPOINT__LOCALITY_LB_ENDPOINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&endpoint__locality_lb_endpoints__descriptor) \
    , 0,NULL, 0, 0, 0 }


struct  Endpoint__ClusterLoadAssignment
{
  ProtobufCMessage base;
  char *cluster_name;
  size_t n_endpoints;
  Endpoint__LocalityLbEndpoints **endpoints;
};
#define ENDPOINT__CLUSTER_LOAD_ASSIGNMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&endpoint__cluster_load_assignment__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


/* Endpoint__Endpoint methods */
void   endpoint__endpoint__init
                     (Endpoint__Endpoint         *message);
size_t endpoint__endpoint__get_packed_size
                     (const Endpoint__Endpoint   *message);
size_t endpoint__endpoint__pack
                     (const Endpoint__Endpoint   *message,
                      uint8_t             *out);
size_t endpoint__endpoint__pack_to_buffer
                     (const Endpoint__Endpoint   *message,
                      ProtobufCBuffer     *buffer);
Endpoint__Endpoint *
       endpoint__endpoint__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   endpoint__endpoint__free_unpacked
                     (Endpoint__Endpoint *message,
                      ProtobufCAllocator *allocator);
/* Endpoint__LocalityLbEndpoints methods */
void   endpoint__locality_lb_endpoints__init
                     (Endpoint__LocalityLbEndpoints         *message);
size_t endpoint__locality_lb_endpoints__get_packed_size
                     (const Endpoint__LocalityLbEndpoints   *message);
size_t endpoint__locality_lb_endpoints__pack
                     (const Endpoint__LocalityLbEndpoints   *message,
                      uint8_t             *out);
size_t endpoint__locality_lb_endpoints__pack_to_buffer
                     (const Endpoint__LocalityLbEndpoints   *message,
                      ProtobufCBuffer     *buffer);
Endpoint__LocalityLbEndpoints *
       endpoint__locality_lb_endpoints__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   endpoint__locality_lb_endpoints__free_unpacked
                     (Endpoint__LocalityLbEndpoints *message,
                      ProtobufCAllocator *allocator);
/* Endpoint__ClusterLoadAssignment methods */
void   endpoint__cluster_load_assignment__init
                     (Endpoint__ClusterLoadAssignment         *message);
size_t endpoint__cluster_load_assignment__get_packed_size
                     (const Endpoint__ClusterLoadAssignment   *message);
size_t endpoint__cluster_load_assignment__pack
                     (const Endpoint__ClusterLoadAssignment   *message,
                      uint8_t             *out);
size_t endpoint__cluster_load_assignment__pack_to_buffer
                     (const Endpoint__ClusterLoadAssignment   *message,
                      ProtobufCBuffer     *buffer);
Endpoint__ClusterLoadAssignment *
       endpoint__cluster_load_assignment__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   endpoint__cluster_load_assignment__free_unpacked
                     (Endpoint__ClusterLoadAssignment *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Endpoint__Endpoint_Closure)
                 (const Endpoint__Endpoint *message,
                  void *closure_data);
typedef void (*Endpoint__LocalityLbEndpoints_Closure)
                 (const Endpoint__LocalityLbEndpoints *message,
                  void *closure_data);
typedef void (*Endpoint__ClusterLoadAssignment_Closure)
                 (const Endpoint__ClusterLoadAssignment *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor endpoint__endpoint__descriptor;
extern const ProtobufCMessageDescriptor endpoint__locality_lb_endpoints__descriptor;
extern const ProtobufCMessageDescriptor endpoint__cluster_load_assignment__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_api_2fendpoint_2fendpoint_2eproto__INCLUDED */
